---
- hosts: all
  become: true
  vars_files:
    - vars.yaml

  tasks:
    - name: Check if Docker is installed
      command: docker --version
      register: docker_check
      ignore_errors: true
      changed_when: false

    - name: Install Docker only if not installed
      when: docker_check.rc != 0
      block:
        - name: Install aptitude
          apt:
            name: aptitude
            state: latest
            update_cache: true

        - name: Install required system packages
          apt:
            pkg:
              - apt-transport-https
              - ca-certificates
              - curl
              - software-properties-common
              - python3-pip
              - virtualenv
              - python3-setuptools
            state: latest
            update_cache: true

        - name: Add Docker GPG apt Key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker Repository
          apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu focal stable
            state: present

        - name: Update apt and install docker-ce
          apt:
            name: docker-ce
            state: latest
            update_cache: true

        - name: Install Docker Module for Python
          pip:
            name: docker

        - name: Ensure docker group exists
          ansible.builtin.group:
            name: docker
            state: present

        - name: Create a docker user
          ansible.builtin.user:
            name: docker
            group: docker
            state: present
            shell: /bin/bash
            createhome: yes

        - name: Create .ssh file for docker user
          ansible.builtin.file:
            path: /home/docker/.ssh
            state: directory
            mode: '0700'
            owner: docker
            group: docker

        - name: Add public keys to docker user
          ansible.builtin.copy:
            content: "{{ docker_public_keys | join('\n') }}"
            dest: /home/docker/.ssh/authorized_keys
            owner: docker
            group: docker
            mode: '0600'

    - name: Pull default Docker image
      when: docker_check.rc != 0 # Only pull the image if Docker was just installed
      community.docker.docker_image:
        name: '{{ default_container_image }}'
        source: pull

    - name: Create default containers
      when: docker_check.rc != 0 # Only create containers if Docker was just installed
      community.docker.docker_container:
        name: '{{ default_container_name }}{{ item }}'
        image: '{{ default_container_image }}'
        command: '{{ default_container_command }}'
        state: present
      with_sequence: count={{ container_count }}
