---
- hosts: commercial
  become: yes
  vars_files:
    - vars.yaml
  tasks:
    - name: Get latest prod docker image
      uri:
        url: 'https://hub.docker.com/v2/repositories/devmhk/mplusweb/tags?page_size=1'
        method: GET
        return_content: yes
      register: docker_tags

    - name: Get latest prod docker tag
      set_fact:
        prod_tag: '{{ docker_tags.json.results[0].name }}'

    - name: Show latest prod docker tag
      debug:
        msg: 'Latest prod docker tag is {{ prod_tag }}'

    - name: Ensure compose directory exists for prod
      file:
        path: /opt/mplus/web/prod
        state: directory

    - name: Copy prod compose file
      copy:
        src: ./compose.yaml
        dest: /opt/mplus/web/prod/docker-compose.yaml

    - name: Update tag on docker compose file
      replace:
        path: /opt/mplus/web/prod/docker-compose.yaml
        regexp: 'devmhk/mplusweb:latest'
        replace: 'devmhk/mplusweb:{{ prod_tag }}'

    - name: Ensure prod env file exists
      file:
        path: /opt/mplus/web/prod/.env
        state: touch

    - name: Generate .env file
      template:
        src: ./env.j2
        dest: /opt/mplus/web/prod/.env
        mode: 0744

    - name: Get the currently running image tag for prod
      shell: |
        docker ps --format "{{ '{{.Image}}' }}" | grep '^devmhk/mplusweb:' | awk -F ':' '{print $2}'
      register: current_tag
      changed_when: false
      ignore_errors: true

    - name: Display the currently running image tag
      debug:
        msg: "Current running image tag: {{ current_tag.stdout | default('N/A') }}"

    - name: Stop web prod if running
      community.docker.docker_compose_v2:
        project_src: /opt/mplus/web/prod
        project_name: mplus-web-prod
        files:
          - docker-compose.yaml
        state: absent
      ignore_errors: true

    - name: Start web prod
      community.docker.docker_compose_v2:
        project_src: /opt/mplus/web/prod
        project_name: mplus-web-prod
        files:
          - docker-compose.yaml
        state: present
        recreate: always

    - name: Wait for web prod to start
      wait_for:
        host: localhost
        port: 3100
        delay: 5
        timeout: 60
        state: started
      register: service_status
      failed_when: service_status is failed

    - name: Display service status
      debug:
        msg: 'Service status: {{ service_status }}'

    - name: Rollback to previous version if start fails
      block:
        - name: Stop failed prod
          community.docker.docker_compose_v2:
            project_src: /opt/mplus/web/prod
            files:
              - docker-compose.yaml
            state: absent
          when: service_status.failed is defined and service_status.failed

        - name: Restore previous image tag in compose file
          replace:
            path: /opt/mplus/web/prod/docker-compose.yaml
            regexp: 'devmhk/mplusweb:.*'
            replace: 'devmhk/mplusweb:{{ current_tag.stdout }}'
          when: current_tag.stdout | length > 0

        - name: Restart prod with previous version
          community.docker.docker_compose_v2:
            project_src: /opt/mplus/web/prod
            files:
              - docker-compose.yaml
            state: present
            recreate: always
          when: current_tag.stdout | length > 0

        - name: Fail the playbook if rollback is triggered
          fail:
            msg: 'Deployment failed! Rolled back to previous version: {{ current_tag.stdout }}'
          when: current_tag.stdout | length > 0
      when: service_status.failed is defined and service_status.failed
