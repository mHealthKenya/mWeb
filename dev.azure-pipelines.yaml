trigger:
  - walldev

resources:
  - repo: self

variables:
  - group: WallDev
  - name: tag
    value: $(Build.BuildId)

stages:
  - stage: BuildAndPushFrontend
    displayName: Build and Push Frontend Docker Image
    jobs:
      - job: BuildAndPushFrontendImage
        displayName: Build and Push Frontend Image
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Bash@3
            displayName: Create .env file
            inputs:
              targetType: 'inline'
              script: |
                cat <<EOT > .env
                NEXT_GOOGLE_CLIENT_ID=$(NEXT_GOOGLE_CLIENT_ID)
                NEXT_PUBLIC_POKEMON_LIST_API_BASE_URL=$(NEXT_PUBLIC_POKEMON_LIST_API_BASE_URL)
                NEXT_PUBLIC_API_RETRY_INTERVAL_IN_SECONDS=$(NEXT_PUBLIC_API_RETRY_INTERVAL_IN_SECONDS)
                NEXT_PUBLIC_API_MAX_RETRY=$(NEXT_PUBLIC_API_MAX_RETRY)
                NEXT_PUBLIC_JWT_SECRET=$(NEXT_PUBLIC_JWT_SECRET)
                NEXT_PUBLIC_GOOGLE_MAPS_KEY=$(NEXT_PUBLIC_GOOGLE_MAPS_KEY)
                NEXT_PUBLIC_BASE_URL=$(NEXT_PUBLIC_BASE_URL)
                # more vars here
                EOT

          - task: Docker@2
            displayName: Build and Push Docker Image
            condition: succeeded()
            inputs:
              containerRegistry: 'docker'
              repository: 'devmhk/mpluswebdev'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(tag)'
              buildContext: '.'

          - script: |
              rm -f .env
            displayName: Remove .env File

          - script: |
              echo "Docker images list after frontend build:"
              docker images
            displayName: List Docker Images
